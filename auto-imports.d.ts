/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-auto-import
export {}
declare global {
  const ArrayField: typeof import('@formily/vue')['ArrayField']
  const ArrayTable: typeof import('@formily/element-plus')['ArrayTable']
  const EffectScope: typeof import('vue')['EffectScope']
  const Field: typeof import('@formily/vue')['Field']
  const Form: typeof import('@formily/element-plus')['Form']
  const FormButtonGroup: typeof import('@formily/element-plus')['FormButtonGroup']
  const FormItem: typeof import('@formily/element-plus')['FormItem']
  const FormLayout: typeof import('@formily/element-plus')['FormLayout']
  const FormProvider: typeof import('@formily/vue')['FormProvider']
  const Input: typeof import('@formily/element-plus')['Input']
  const InputNumber: typeof import('@formily/element-plus')['InputNumber']
  const ObjectField: typeof import('@formily/vue')['ObjectField']
  const Password: typeof import('@formily/element-plus')['Password']
  const PreviewText: typeof import('@formily/element-plus')['PreviewText']
  const QueryForm: typeof import('@uxuip/element-plus-query')['QueryForm']
  const QueryPagination: typeof import('@uxuip/element-plus-query')['QueryPagination']
  const QueryProvide: typeof import('@uxuip/element-plus-query')['QueryProvide']
  const QueryTable: typeof import('@uxuip/element-plus-query')['QueryTable']
  const Space: typeof import('@formily/element-plus')['Space']
  const Switch: typeof import('@formily/element-plus')['Switch']
  const VoidField: typeof import('@formily/vue')['VoidField']
  const axios: typeof import('axios')['default']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createForm: typeof import('@formily/core')['createForm']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAxios: typeof import('@vueuse/integrations/useAxios')['useAxios']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useFileDialog: typeof import('@vueuse/core')['useFileDialog']
  const useI18n: typeof import('vue-i18n')['useI18n']
  const useJsonData: typeof import('./src/composables/useJsonData')['useJsonData']
  const useLink: typeof import('vue-router')['useLink']
  const useObjectUrl: typeof import('@vueuse/core')['useObjectUrl']
  const usePermission: typeof import('./src/store/permission')['usePermission']
  const useReload: typeof import('./src/composables/useReload')['useReload']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useStorage: typeof import('@vueuse/core')['useStorage']
  const useUserStore: typeof import('./src/store/user')['useUserStore']
  const useVModel: typeof import('@vueuse/core')['useVModel']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, InjectionKey, PropType, Ref, VNode } from 'vue'
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly ArrayField: UnwrapRef<typeof import('@formily/vue')['ArrayField']>
    readonly ArrayTable: UnwrapRef<typeof import('@formily/element-plus')['ArrayTable']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Field: UnwrapRef<typeof import('@formily/vue')['Field']>
    readonly Form: UnwrapRef<typeof import('@formily/element-plus')['Form']>
    readonly FormButtonGroup: UnwrapRef<typeof import('@formily/element-plus')['FormButtonGroup']>
    readonly FormItem: UnwrapRef<typeof import('@formily/element-plus')['FormItem']>
    readonly FormLayout: UnwrapRef<typeof import('@formily/element-plus')['FormLayout']>
    readonly FormProvider: UnwrapRef<typeof import('@formily/vue')['FormProvider']>
    readonly Input: UnwrapRef<typeof import('@formily/element-plus')['Input']>
    readonly InputNumber: UnwrapRef<typeof import('@formily/element-plus')['InputNumber']>
    readonly ObjectField: UnwrapRef<typeof import('@formily/vue')['ObjectField']>
    readonly Password: UnwrapRef<typeof import('@formily/element-plus')['Password']>
    readonly PreviewText: UnwrapRef<typeof import('@formily/element-plus')['PreviewText']>
    readonly QueryForm: UnwrapRef<typeof import('@uxuip/element-plus-query')['QueryForm']>
    readonly QueryPagination: UnwrapRef<typeof import('@uxuip/element-plus-query')['QueryPagination']>
    readonly QueryProvide: UnwrapRef<typeof import('@uxuip/element-plus-query')['QueryProvide']>
    readonly QueryTable: UnwrapRef<typeof import('@uxuip/element-plus-query')['QueryTable']>
    readonly Space: UnwrapRef<typeof import('@formily/element-plus')['Space']>
    readonly Switch: UnwrapRef<typeof import('@formily/element-plus')['Switch']>
    readonly VoidField: UnwrapRef<typeof import('@formily/vue')['VoidField']>
    readonly axios: UnwrapRef<typeof import('axios')['default']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createForm: UnwrapRef<typeof import('@formily/core')['createForm']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAxios: UnwrapRef<typeof import('@vueuse/integrations/useAxios')['useAxios']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useFileDialog: UnwrapRef<typeof import('@vueuse/core')['useFileDialog']>
    readonly useI18n: UnwrapRef<typeof import('vue-i18n')['useI18n']>
    readonly useJsonData: UnwrapRef<typeof import('./src/composables/useJsonData')['useJsonData']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useObjectUrl: UnwrapRef<typeof import('@vueuse/core')['useObjectUrl']>
    readonly usePermission: UnwrapRef<typeof import('./src/store/permission')['usePermission']>
    readonly useReload: UnwrapRef<typeof import('./src/composables/useReload')['useReload']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useStorage: UnwrapRef<typeof import('@vueuse/core')['useStorage']>
    readonly useUserStore: UnwrapRef<typeof import('./src/store/user')['useUserStore']>
    readonly useVModel: UnwrapRef<typeof import('@vueuse/core')['useVModel']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
